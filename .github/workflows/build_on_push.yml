name: continuous integration

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        experimental: [false]
        include:
          - os: macos-10.15
            experimental: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install package dependencies
        if:  startsWith( matrix.os, 'ubuntu' )
        run: |
          sudo apt-get update -y
          sudo apt-get install -y cmake pkg-config gfortran nvidia-cuda-toolkit valgrind

      - name: Install package dependencies
        if:  startsWith( matrix.os, 'macos' )
        run: |
          brew install cmake pkg-config fmt spdlog nlohmann-json grpc
          echo "PKG_CONFIG_PATH=$(brew --prefix)/opt/openssl@1.1/lib/pkgconfig" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install python test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install lit pex pycodestyle

      - name: Prepare
        run: |
          mkdir "$HOME/work/bear_build"
          mkdir "$HOME/work/bear_install"
          echo "BUILD_DIR=$HOME/work/bear_build" >> $GITHUB_ENV
          echo "INSTALL_DIR=$HOME/work/bear_install" >> $GITHUB_ENV
          echo "$HOME/work/bear_install/bin:$PATH" >> $GITHUB_PATH

      - name: Build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: |
          cmake -B "$BUILD_DIR" -S "$GITHUB_WORKSPACE" -DCMAKE_INSTALL_PREFIX:PATH="$INSTALL_DIR"
          cmake --build "$BUILD_DIR" --parallel 4 --target install

      - name: Prepare [functional test]
        run: |
          echo "ZLIB_SRC_DIR=$HOME/work/zlib" >> $GITHUB_ENV
          git clone https://github.com/madler/zlib.git $HOME/work/zlib -b v1.2.11

      - name: Execute [functional test]
        run: |
          mkdir $HOME/work/zlib_compilations && cd $HOME/work/zlib_compilations
          bear -- $ZLIB_SRC_DIR/configure
          bear -- make
          cat compile_commands.json
          $GITHUB_WORKSPACE/test/bin/assert_compilation compile_commands.json count -gt 30
